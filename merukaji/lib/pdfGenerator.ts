// lib/pdfGenerator.ts
import { jsPDF } from 'jspdf';
import 'jspdf-autotable';
import { VideoMetadata } from '@/types/youtube';

// Create PDF Document from summary data
export const generateSummaryPDF = (
    summary: string,
    metadata: VideoMetadata | undefined,
    timestamp: string | null | undefined,
    provider: string | null | undefined,
    isFreeTier: boolean = false
): Blob => {
    // Initialize PDF document (A4 format)
    const doc = new jsPDF({
        orientation: 'portrait',
        unit: 'mm',
        format: 'a4'
    });

    // Add Merukaji logo and header
    addHeader(doc, metadata);

    // Add summary content
    addSummaryContent(doc, summary, metadata, timestamp);

    // Add watermark for free tier users
    if (isFreeTier) {
        addWatermark(doc);
    }

    // Add footer with provider info and page numbers
    addFooter(doc, provider);

    // Return as blob for download
    return doc.output('blob') as Blob;
};

// Add header with title and metadata
const addHeader = (doc: jsPDF, metadata?: VideoMetadata) => {
    // Add title and metadata
    doc.setFontSize(16);
    doc.setFont('helvetica', 'bold');
    doc.setTextColor(33, 33, 33);
    doc.text(metadata?.title || 'Video Summary', 20, 30);

    doc.setFontSize(10);
    doc.setFont('helvetica', 'normal');
    doc.setTextColor(100, 100, 100);

    if (metadata?.channelTitle) {
        doc.text(`Channel: ${metadata.channelTitle}`, 20, 38);
    }

    if (metadata?.publishedAt) {
        const publishDate = new Date(metadata.publishedAt).toLocaleDateString();
        doc.text(`Published: ${publishDate}`, 20, 44);
    }

    // Add horizontal line
    doc.setDrawColor(200, 200, 200);
    doc.line(20, 48, 190, 48);
};

// Add formatted summary content
const addSummaryContent = (
    doc: jsPDF,
    summary: string,
    metadata?: VideoMetadata,
    timestamp?: string | null
) => {
    // Add summary timestamp if available
    if (timestamp) {
        doc.setFontSize(9);
        doc.setTextColor(120, 120, 120);
        const formattedDate = new Date(timestamp).toLocaleDateString();
        doc.text(`Summary generated: ${formattedDate}`, 20, 55);
    }

    // Add summary content
    doc.setFontSize(11);
    doc.setTextColor(50, 50, 50);
    doc.setFont('helvetica', 'normal');

    // Format and split summary text to fit within page width
    const splitText = doc.splitTextToSize(summary, 170);
    doc.text(splitText, 20, 60);

    // Add video ID for reference
    if (metadata?.videoId) {
        doc.setFontSize(8);
        doc.setTextColor(150, 150, 150);
    }
};

// Add watermark for free tier users
const addWatermark = (doc: jsPDF) => {
    // Set watermark properties
    doc.setTextColor(220, 220, 220);
    doc.setFontSize(30);
    doc.setFont('helvetica', 'bold');

    // Add watermark to each page
    const pageCount = doc.getNumberOfPages();
    for (let i = 1; i <= pageCount; i++) {
        doc.setPage(i);

        // Calculate the dimensions for positioning
        const pageWidth = doc.internal.pageSize.width;
        const pageHeight = doc.internal.pageSize.height;

        // Watermark text
        const watermarkText = "[Merukaji] YouTube Summary AI Generator";

        // We'll create a watermark effect by adding multiple diagonal text elements
        const textOptions = {
            align: 'center' as const, // TypeScript requires this type assertion
        };

        // Use multiple text placements instead of rotation for compatibility
        // Top-left to bottom-right diagonal text
        doc.text(watermarkText, pageWidth / 2, pageHeight / 2, textOptions);

        // Add more instances with slight offsets for better coverage
        doc.text(watermarkText, pageWidth / 2, pageHeight / 3, textOptions);
        doc.text(watermarkText, pageWidth / 2, (pageHeight / 3) * 2, textOptions);
    }
};

// Add footer with page numbers and provider info
const addFooter = (doc: jsPDF, provider?: string | null) => {
    const pageCount = doc.getNumberOfPages();

    for (let i = 1; i <= pageCount; i++) {
        doc.setPage(i);
        doc.setFontSize(8);
        doc.setTextColor(150, 150, 150);

        // Add provider info
        if (provider) {
            doc.text(`Generated by ${provider} AI`, 20, 285);
        }

        // Add Merukaji branding
        doc.text('Powered by Merukaji', 105, 285, { align: 'center' });

        // Add page numbers
        doc.text(`Page ${i} of ${pageCount}`, 190, 285, { align: 'right' });
    }
};